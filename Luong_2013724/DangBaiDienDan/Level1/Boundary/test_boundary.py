# Generated by Selenium IDE
# Generated by Selenium IDE
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import os 
import unittest
import csv
import time

class TestTest4(unittest.TestCase):
  def __init__(self, arg):
    super().__init__(arg)
    
  def set_up_drive(self):
    options = webdriver.ChromeOptions()
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    self.driver = webdriver.Chrome(options=options)
    self.vars = {}
    self.driver.get("https://school.moodledemo.net/mod/forum/post.php?reply=358#mformforum")
    self.driver.refresh()
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    self.driver.find_element(By.ID, "username").send_keys("student") 
    self.driver.find_element(By.ID, "password").send_keys("moodle")
    self.driver.find_element(By.ID, "loginbtn").click()
    time.sleep(10)
    
  def teardown_method(self):
    self.driver.quit()
  
  def test_level1_boundary(self):
    count = 0
    
    with open("./boundary.csv", 'r') as file:
        csvreader = csv.reader(file)
        for row in csvreader:
            if count != 0:
                file_path = os.getcwd()
                file_path = file_path.replace("\Level1\Boundary", f"\DataTest\{row[2]}")
                # file_path = os.getcwd()+ f"\Data\{row[2]}" 
                self.set_up_drive()
                self.driver.switch_to.frame(0)
                time.sleep(10)
                # self.driver.find_element(By.CSS_SELECTOR, "html").click()
                element = self.driver.find_element(By.ID, "tinymce")
                time.sleep(10)
                self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = arguments[1]}", element, row[1])
                time.sleep(10)
                self.driver.switch_to.default_content()
                time.sleep(10)
                self.driver.find_element(By.CSS_SELECTOR, ".dndupload-message .fa").click()
                time.sleep(10)
                self.driver.execute_script("window.scrollTo(0,956)")
                self.driver.find_element(By.NAME, "repo_upload_file").send_keys(file_path)
                self.driver.find_element(By.XPATH, "//button[contains(.,\'Upload this file\')]").click()
                time.sleep(10)
                self.driver.find_element(By.ID, "id_submitbutton").click()
                time.sleep(10)
                self.teardown_method()
                print(f"Test {count}: Pass")
                time.sleep(10)
            count += 1
  
if __name__ == "__main__":
  unittest.main(warnings='ignore')
